<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exercise on Ting-En Liao</title><link>https://xxoooxx345678.github.io/posts/self-study/operating-system/exercise/</link><description>Recent content in Exercise on Ting-En Liao</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xxoooxx345678.github.io/posts/self-study/operating-system/exercise/index.xml" rel="self" type="application/rss+xml"/><item><title>Chapter 1</title><link>https://xxoooxx345678.github.io/posts/self-study/operating-system/exercise/chapter-1/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://xxoooxx345678.github.io/posts/self-study/operating-system/exercise/chapter-1/</guid><description>1. #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;lt;sys/wait.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;sys/time.h&amp;gt; #define PING_PONG_LENTH 100000 #define timelen(ST, ED) ((ED).tv_sec - (ST).tv_sec + (((ED).tv_usec - (ST).tv_usec) / 1000000.0)) int main() { int p[2][2]; struct timeval st, ed; pipe(p[0]); pipe(p[1]); if (fork() == 0) // child { close(p[1][0]); close(p[0][1]); char buf[1]; gettimeofday(&amp;amp;st, 0); for (int i = 0; i &amp;lt; PING_PONG_LENTH; ++i) { read(p[0][0], buf, 1); write(p[1][1], buf, 1); } gettimeofday(&amp;amp;ed, 0); close(p[0][0]); close(p[1][1]); printf(&amp;#34;Child time elapsed: %.</description></item></channel></rss>