<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Labs on Ting-En Liao</title><link>https://xxoooxx345678.github.io/posts/self-study/operating-system/labs/</link><description>Recent content in Labs on Ting-En Liao</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xxoooxx345678.github.io/posts/self-study/operating-system/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>Lab: Xv6 and Unix utilities</title><link>https://xxoooxx345678.github.io/posts/self-study/operating-system/labs/lab1/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://xxoooxx345678.github.io/posts/self-study/operating-system/labs/lab1/</guid><description>sleep #include &amp;#34;kernel/types.h&amp;#34; #include &amp;#34;kernel/stat.h&amp;#34; #include &amp;#34;user/user.h&amp;#34; int main(int argc, char *argv[]) { if (argc &amp;lt; 2) { printf(&amp;#34;[Error] missing operand\n&amp;#34;); exit(-1); } int sleep_time = atoi(argv[1]); sleep(sleep_time); exit(0); } pingpong #include &amp;#34;kernel/types.h&amp;#34; #include &amp;#34;kernel/stat.h&amp;#34; #include &amp;#34;user/user.h&amp;#34; int main() { int p[2][2]; int child_pid, parent_pid; pipe(p[0]); pipe(p[1]); if ((child_pid = fork()) == 0) // child { close(p[0][1]); close(p[1][0]); char buf[1]; read(p[0][0], buf, 1); write(p[1][1], buf, 1); child_pid = getpid(); printf(&amp;#34;%d: received ping\n&amp;#34;, child_pid); } else // parent { close(p[0][0]); close(p[1][1]); char buf[1] = &amp;#34;0&amp;#34;; write(p[0][1], buf, 1); read(p[1][0], buf, 1); wait(0); parent_pid = getpid(); printf(&amp;#34;%d: received pong\n&amp;#34;, parent_pid); } exit(0); } primes Code could be cleaner !</description></item></channel></rss>