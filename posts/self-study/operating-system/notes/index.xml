<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on Ting-En Liao</title><link>https://xxoooxx345678.github.io/posts/self-study/operating-system/notes/</link><description>Recent content in Notes on Ting-En Liao</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xxoooxx345678.github.io/posts/self-study/operating-system/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>OS organization and system calls</title><link>https://xxoooxx345678.github.io/posts/self-study/operating-system/notes/os-organization-and-system-calls/</link><pubDate>Mon, 18 Jul 2022 00:00:00 +0000</pubDate><guid>https://xxoooxx345678.github.io/posts/self-study/operating-system/notes/os-organization-and-system-calls/</guid><description>Chapter 2 : Operating system organization An operating system must fulfill three requirements: multiplexing, isolation, and interaction
2.1 Abstracting physical resources Why do we need operating system ? One could implement the system calls as a library, then each app could even have its own library tailored to its needs. Apps could directly interact with HW resources and use those resources int the best way for apps. (OS for Embedded devices or real-time systems) The downside of this approach is, multiplexing will be troublesome.</description></item></channel></rss>